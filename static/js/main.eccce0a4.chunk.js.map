{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_App_css__WEBPACK_IMPORTED_MODULE_1__","_App_css__WEBPACK_IMPORTED_MODULE_1___default","initialState","displayValue","previousValue","operator","decimalUsed","reducer","state","action","type","payload","calculate","prevValue","currentValue","prev","parseFloat","curr","result","toFixed","Display","_ref","value","React","createElement","className","Calculator","dispatch","useReducer","display","setDisplay","useState","lastCharType","setLastCharType","canAddOperator","setCanAddOperator","canAddDecimal","setCanAddDecimal","backspaceDisplay","_display","slice","addTextToDisplay","text","concat","clearDisplay","onClick","disabled","eval","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.eccce0a4.chunk.js","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport './App.css';\n\ninterface State {\n  displayValue: string;\n  previousValue: string | null;\n  operator: string | null;\n  decimalUsed: boolean;\n}\n\nconst initialState: State = {\n  displayValue: '0',\n  previousValue: null,\n  operator: null,\n  decimalUsed: false,\n};\n\nconst reducer = (state: State, action: { type: string; payload?: string }) => {\n  switch (action.type) {\n    case 'ADD_DIGIT':\n      return {\n        ...state,\n        displayValue: state.displayValue === '0' ? action.payload! : state.displayValue + action.payload!,\n      };\n    case 'CLEAR':\n      return initialState;\n    case 'SET_OPERATOR':\n      return {\n        ...state,\n        previousValue: state.displayValue,\n        operator: action.payload!,\n        decimalUsed: false,\n      };\n    case 'EVALUATE':\n      return {\n        ...state,\n        displayValue: calculate(state.previousValue, state.operator, state.displayValue),\n        previousValue: null,\n        operator: null,\n        decimalUsed: false,\n      };\n    case 'ADD_DECIMAL':\n      return {\n        ...state,\n        displayValue: state.decimalUsed ? state.displayValue : state.displayValue + '.',\n        decimalUsed: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst calculate = (prevValue: string | null, operator: string | null, currentValue: string) => {\n  const prev = parseFloat(prevValue!);\n  const curr = parseFloat(currentValue);\n  let result: number;\n\n  switch (operator) {\n    case '+':\n      result = prev + curr;\n      break;\n    case '-':\n      result = prev - curr;\n      break;\n    case '*':\n      result = prev * curr;\n      break;\n    case '/':\n      result = prev / curr;\n      break;\n    default:\n      result = curr;\n  }\n\n  return result.toFixed(4); // Round to 4 decimal places\n};\n\nconst Display: React.FC<{ value: string }> = ({ value }) => {\n  return (\n    <div className=\"display flex justify-end items-center rounded-lg p-4 bg-blue-50 min-h-16 mb-4 text-lg\">\n      <span>{value}</span>\n    </div>\n  );\n};\n\nconst Calculator: React.FC = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [display, setDisplay] = useState('');\n  const [lastCharType, setLastCharType] = useState('null');\n  const [canAddOperator, setCanAddOperator] = useState(false);\n  const [canAddDecimal, setCanAddDecimal] = useState(false);\n\n  const backspaceDisplay = () => {\n    setDisplay((_display: string) => _display.slice(0, -1))\n\n    setLastCharType(() => {\n      switch (display.slice(-2, -1)) {\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n          return 'number';\n        case '+':\n        case '-':\n        case '*':\n        case '/':\n          return 'operator';\n        default:\n          return 'null';\n      }\n    });\n  }\n\n  const addTextToDisplay = (text: string) => {\n    setDisplay((_display: string) => {\n      if (_display === '0') {\n        _display = '';\n      }\n\n      return `${_display}${text}`;\n    })\n\n    setLastCharType(() => {\n      switch (text) {\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n          return 'number';\n        case '+':\n        case '-':\n        case '*':\n        case '/':\n          return 'operator';\n        default:\n          return 'null';\n      }\n    });\n  };\n\n  const clearDisplay = () => {\n    setDisplay('');\n    setLastCharType('null');\n  }\n\n  return (\n    <div className=\"flex justify-center items-center h-full bg-gray-100\">\n      <div className=\"flex rounded-2xl bg-white p-4\">\n        <div className=\"calculator\">\n          <Display value={display} />\n          <div className=\"buttons grid grid-cols-4 gap-4\">\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => backspaceDisplay()}>B</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => setDisplay('')}>C</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" disabled={lastCharType !== 'number'} onClick={() => addTextToDisplay('/')}>/</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" disabled={lastCharType !== 'number'} onClick={() => addTextToDisplay('*')}>*</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => addTextToDisplay('7')}>7</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => addTextToDisplay('8')}>8</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => addTextToDisplay('9')}>9</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" disabled={lastCharType !== 'number'} onClick={() => addTextToDisplay('-')}>-</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => addTextToDisplay('4')}>4</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => addTextToDisplay('5')}>5</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => addTextToDisplay('6')}>6</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" disabled={lastCharType !== 'number'} onClick={() => addTextToDisplay('+')}>+</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => addTextToDisplay('1')}>1</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => addTextToDisplay('2')}>2</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => addTextToDisplay('3')}>3</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" disabled={lastCharType !== 'number'} onClick={() => addTextToDisplay('.')}>.</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" onClick={() => addTextToDisplay('0')}>0</button>\n            <button className=\"rounded-lg bg-blue-300 disabled:bg-blue-200 p-4 text-semibold w-16 h-16 disabled:cursor-not-allowed\" disabled={lastCharType !== 'number'} onClick={() => setDisplay(eval(display))}>=</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}